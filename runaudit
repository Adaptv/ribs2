#!/bin/bash
#
#   This file is part of RIBS2.0 (Robust Infrastructure for Backend Systems).
#   RIBS is an infrastructure for building great SaaS applications (but not
#   limited to).
#
#   Copyright (C) 2013,2014,2017 Adap.tv, Inc.
#
#   RIBS is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Lesser General Public License as published by
#   the Free Software Foundation, version 2.1 of the License.
#
#   RIBS is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with RIBS.  If not, see <http://www.gnu.org/licenses/>.
#

COPYRIGHT_HEAD="/*\\
    This file is part of RIBS2.0 (Robust Infrastructure for Backend Systems).\\
    RIBS is an infrastructure for building great SaaS applications (but not\\
    limited to).\\
"

COPYRIGHT_FOOT="\\
\\
    RIBS is free software: you can redistribute it and/or modify\\
    it under the terms of the GNU Lesser General Public License as published by\\
    the Free Software Foundation, version 2.1 of the License.\\
\\
    RIBS is distributed in the hope that it will be useful,\\
    but WITHOUT ANY WARRANTY; without even the implied warranty of\\
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\
    GNU Lesser General Public License for more details.\\
\\
    You should have received a copy of the GNU Lesser General Public License\\
    along with RIBS.  If not, see <http://www.gnu.org/licenses/>.\\
*/"

BLACKLIST=( "./include/search.h" "./src/search.c" )

usage()
{
    echo "$0 -fv"
    echo "   -f force recreate license"
    echo "   -v verbose"
    exit
}

is_blacklist()
{
    local value=$1
    local n=${#BLACKLIST[@]}
    local i=0

    while [ $i -lt $n ]; do
        [ "$value" = "${BLACKLIST[$((i++))]}" ] && return 0
    done
    return 1
}

get_date()
{
    local FILE=$1
    local WORK

    WORK=$(git log --format="%ai" $FILE | cut -d "-" -f 1 | sort -un)
    echo $WORK | sed -e "s/ /,/g"
}

get_file()
{
    local FILE=$1
    local DATE

    DATE=$(grep "Copyright (C)" $FILE | awk '{ print $3; }')
    echo $DATE
}

while getopts ':fv' OPTION; do
    case $OPTION in
        f)  force=1;;
        v)  verbose=1;;
        *)  usage;;
    esac
done

for FILE in $(find . -type f -name "*.c" -o -name "*.h"); do
    [ -n "$verbose" ] && echo -n "Processing $FILE: "
    if is_blacklist $FILE; then
        [ -n "$verbose" ] && echo "skipped"
    else
        DATE=$(get_date $FILE)
        CURRENT_DATE=$(get_file $FILE)

        if [ -n "$force" -o "$DATE" != "$CURRENT_DATE" ]; then
            [ ! -n "$verbose" ] && echo -n "Processing $FILE: "
            if [ ! -z $CURRENT_DATE ]; then
                sed -i -e "1,19 d" $FILE
                MSG="rebuilt"
            else
                MSG="corrected"
            fi

            sed -i -e "1i $COPYRIGHT_HEAD" \
                   -e "1i \ \ \ \ Copyright (C) $DATE Adap.tv, Inc." \
                   -e "1i $COPYRIGHT_FOOT" $FILE
            echo "$MSG"
        else
            [ -n "$verbose" ] && echo "unchanged"
        fi
    fi
done
